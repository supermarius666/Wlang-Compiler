script          := declaration* EOF ;

declaration     := varDecl
                 | funDecl
                 | statement ;

varDecl         := "sia" IDENT ( "=" expression )? "!!" ;

funDecl         := "fun" IDENT "(" paramList? ")" block ;
paramList       := IDENT ( "," IDENT )* ;

statement       := printStmt
                 | returnStmt
                 | ifStmt
                 | whileStmt
                 | block
                 | exprStmt ;

printStmt       := "stampa" "(" argumentList? ")" "!!" ;

returnStmt      := "ritorna" ( "!!" | expression "!!" ) ;

ifStmt          := "se" "(" expression ")" block ( "altrimenti" block )? ;

whileStmt       := "mentre" "(" expression ")" block ;

block           := "{" declaration* "}" ;

exprStmt        := expression "!!" ;

argumentList    := expression ( "," expression )* ;

expression      := assignment ;

assignment      := IDENT "=" assignment
                 | or ;

or              := and ( "o" and )* ;          
and             := equality ( "e" equality )* ;

equality        := comparison ( ( "==" | "!=" ) comparison )* ;

comparison      := term ( ( ">" | ">=" | "<" | "<=" ) term )* ;

term            := factor ( ( "+" | "-" ) factor )* ;

factor          := unary ( ( "*" | "/" | "%" ) unary )* ;

unary           := ( "!" | "-" ) unary
                 | call ;

call            := primary ( "(" argumentList? ")" )* ;

primary         := NUMBER
                 | STRING
                 | "vero"
                 | "falso"
                 | "nulla"
                 | IDENT
                 | "(" expression ")" ;
```

Lessico (token)

- IDENT: [A-Za-z_][A-Za-z0-9_]*
- NUMBER: [0-9]+("." [0-9]+)?
- STRING: '"' (caratteri | escape)* '"'
  - escape supportate: \n \t \\ \" \s
- Terminatore di statement: "!!"

Precedenza operatori (dal più basso al più alto)

- assegnazione: =
- or: o
- and: e
- uguaglianza: == !=
- confronto: > >= < <=
- somma: + -
- prodotto: * / (%) opzionale
- unari: ! -